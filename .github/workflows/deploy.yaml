name: Deploy
on:
  push:
    branches:
      - master
      - dev
  schedule:
    - cron: '33 3 * * 1'
  workflow_dispatch:


jobs:
  pre-build:
    name: Set tag variable
    runs-on: ubuntu-latest
    outputs:
      GIT_BRANCH: ${{ steps.step1.outputs.GIT_BRANCH }}
      MAIN_DOCKER_TAG: ${{ steps.step2.outputs.MAIN_DOCKER_TAG }}
      IMAGE_NAME: ${{ steps.step3.outputs.IMAGE_NAME }}
      SHORT_SHA: ${{ steps.step4.outputs.SHORT_SHA }}
    steps:
      - name: Get branch
        id: step1
        run: |
          GIT_BRANCH="${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}"
          echo "GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV
          echo "::set-output name=GIT_BRANCH::$GIT_BRANCH"
      - name: Set main docker image tag 
        id: step2
        run: |
          if [[ "${{ env.GIT_BRANCH }}" == "main" ]] || [[ "${{ env.GIT_BRANCH }}" == "master" ]]; then
            MAIN_DOCKER_TAG=latest
          else
            MAIN_DOCKER_TAG=${{ env.GIT_BRANCH }}
          fi
          echo "::set-output name=MAIN_DOCKER_TAG::$MAIN_DOCKER_TAG"
      - name: remove docker from repo name
        id: step3
        run: |
          IMAGE_NAME=$(echo ${{ github.repository }} | sed 's|^jee-r/docker-||g')
          echo "::set-output name=IMAGE_NAME::$IMAGE_NAME"
      - name: crop SHA
        id: step4
        run: |
          SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`
          echo "::set-output name=SHORT_SHA::$SHORT_SHA"
  build:
    name: Build, tag, and publish Docker image
    needs: pre-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master
      - name: Login into DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/${{ needs.pre-build.outputs.IMAGE_NAME }}:${{ needs.pre-build.outputs.SHORT_SHA }}
            ghcr.io/${{ github.actor }}/${{ needs.pre-build.outputs.IMAGE_NAME }}:${{ needs.pre-build.outputs.MAIN_DOCKER_TAG }}
            ghcr.io/${{ github.actor }}/${{ needs.pre-build.outputs.IMAGE_NAME }}:${{ needs.pre-build.outputs.GIT_BRANCH }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.pre-build.outputs.IMAGE_NAME }}:${{ needs.pre-build.outputs.SHORT_SHA }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.pre-build.outputs.IMAGE_NAME }}:${{ needs.pre-build.outputs.MAIN_DOCKER_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.pre-build.outputs.IMAGE_NAME }}:${{ needs.pre-build.outputs.GIT_BRANCH }} 